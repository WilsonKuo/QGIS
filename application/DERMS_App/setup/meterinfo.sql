CREATE OR REPLACE VIEW METERINFO AS SELECT 
TM.METER_NAME,
STATION_LOCKFLAG1, CATEGORY_LOCKFLAG1, POINT_LOCKFLAG1, RTDBTYPE_LOCKFLAG1, ATTRIBUTE_LOCKFLAG1,
STATION_LOCKFLAG2, CATEGORY_LOCKFLAG2, POINT_LOCKFLAG2, RTDBTYPE_LOCKFLAG2, ATTRIBUTE_LOCKFLAG2,
STATION_P, CATEGORY_P, POINT_P, RTDBTYPE_P, ATTRIBUTE_P,
STATION_V, CATEGORY_V, POINT_V, RTDBTYPE_V, ATTRIBUTE_V,
STATION_I, CATEGORY_I, POINT_I, RTDBTYPE_I, ATTRIBUTE_I,
STATION_EFLAG, CATEGORY_EFLAG, POINT_EFLAG, RTDBTYPE_EFLAG, ATTRIBUTE_EFLAG
FROM TTU_METER TM
LEFT JOIN (SELECT EQUIP_NUM, STATION STATION_LOCKFLAG1, CATEGORY CATEGORY_LOCKFLAG1, POINT POINT_LOCKFLAG1, DECODE(RTDBTYPE, 1, 'S', 2, 'T', NULL) RTDBTYPE_LOCKFLAG1, ATTRIBUTE ATTRIBUTE_LOCKFLAG1 FROM SMXREF
        WHERE TABLENAME = 'LOAD' AND COLNAME = 'LOCKFLAG1') SMLF1
    ON TM.TTU_NAME = SMLF1.EQUIP_NUM
LEFT JOIN (SELECT EQUIP_NUM, STATION STATION_LOCKFLAG2, CATEGORY CATEGORY_LOCKFLAG2, POINT POINT_LOCKFLAG2, DECODE(RTDBTYPE, 1, 'S', 2, 'T', NULL) RTDBTYPE_LOCKFLAG2, ATTRIBUTE ATTRIBUTE_LOCKFLAG2 FROM SMXREF
        WHERE TABLENAME = 'METER' AND COLNAME = 'LOCKFLAG2') SMLF2 
    ON TM.METER_NAME = SMLF2.EQUIP_NUM
LEFT JOIN (SELECT EQUIP_NUM, STATION STATION_P, CATEGORY CATEGORY_P, POINT POINT_P, DECODE(RTDBTYPE, 1, 'S', 2, 'T', NULL) RTDBTYPE_P, ATTRIBUTE ATTRIBUTE_P FROM SMXREF
        WHERE TABLENAME = 'METER' AND COLNAME = 'PA') SMP
    ON TM.METER_NAME = SMP.EQUIP_NUM
LEFT JOIN (SELECT EQUIP_NUM, STATION STATION_V, CATEGORY CATEGORY_V, POINT POINT_V, DECODE(RTDBTYPE, 1, 'S', 2, 'T', NULL) RTDBTYPE_V, ATTRIBUTE ATTRIBUTE_V FROM SMXREF
        WHERE TABLENAME = 'METER' AND COLNAME = 'VOLTMAGA') SMV
    ON TM.METER_NAME = SMV.EQUIP_NUM
LEFT JOIN (SELECT EQUIP_NUM, STATION STATION_I, CATEGORY CATEGORY_I, POINT POINT_I, DECODE(RTDBTYPE, 1, 'S', 2, 'T', NULL) RTDBTYPE_I, ATTRIBUTE ATTRIBUTE_I FROM SMXREF
        WHERE TABLENAME = 'METER' AND COLNAME = 'AMPA') SMI 
    ON TM.METER_NAME = SMI.EQUIP_NUM
LEFT JOIN (SELECT EQUIP_NUM, STATION STATION_EFLAG, CATEGORY CATEGORY_EFLAG, POINT POINT_EFLAG, DECODE(RTDBTYPE, 1, 'S', 2, 'T', NULL) RTDBTYPE_EFLAG, ATTRIBUTE ATTRIBUTE_EFLAG FROM SMXREF
        WHERE TABLENAME = 'METER' AND COLNAME = 'EFLAG') SMEF
    ON TM.METER_NAME = SMEF.EQUIP_NUM;


--#######################################DEV#######################################--
DROP TABLE MDMS_METER_PROCESSED;
CREATE TABLE MDMS_METER_PROCESSED
(
    METER_NAME  VARCHAR2(10),
    COLNAME     VARCHAR2(19),
    VALUE_RT    NUMBER(10,3),
    SEQ_ID      NUMBER(8)
);

CREATE INDEX MDMS_METER_PROCESSED_IDX1 ON MDMS_METER_PROCESSED (METER_NAME);
CREATE INDEX MDMS_METER_PROCESSED_IDX2 ON MDMS_METER_PROCESSED (COLNAME);
CREATE INDEX MDMS_METER_PROCESSED_IDX3 ON MDMS_METER_PROCESSED (SEQ_ID);

--#SET SERVEROUTPUT ON

CREATE OR REPLACE TRIGGER TRI_PROCESSING_METER_DATA AFTER INSERT ON MDMS_METER
FOR EACH ROW
DECLARE
   CNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO CNT FROM MDMS_METER_PROCESSED WHERE METER_NAME = :NEW.NAMEID AND COLNAME = :NEW.COLNAME AND SEQ_ID < :NEW.SEQ_ID;
    --DBMS_OUTPUT.PUT_LINE(CNT);
    IF CNT > 0 THEN
        UPDATE MDMS_METER_PROCESSED SET VALUE_RT = :NEW.VALUE_RT, SEQ_ID = :NEW.SEQ_ID WHERE METER_NAME = :NEW.NAMEID AND COLNAME = :NEW.COLNAME;
    ELSE
        INSERT INTO MDMS_METER_PROCESSED VALUES (:NEW.NAMEID, :NEW.COLNAME, :NEW.VALUE_RT, :NEW.SEQ_ID);
    END IF;
END;
/

EXIT;