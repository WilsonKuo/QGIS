
--#######################################DEV#######################################--
-- DROP TABLE MDMS_METER_POOL;
-- CREATE TABLE MDMS_METER_POOL
-- (
--     EQUIP_NUM VARCHAR2(19), 
--     COLNAME VARCHAR2(19),
--     METER_NAME VARCHAR2(12),
--     SEQ_ID NUMBER(10),
--     VALUE_RT NUMBER(10,3),
--     DATATIME DATE
-- );
DROP TABLE INTF_FCI_TTU_POOL;
CREATE TABLE INTF_FCI_TTU_POOL 
    (TABLENAME VARCHAR2(19),
    EQUIP_NUM  VARCHAR2(63),
    COLNAME    VARCHAR2(19),
    VALUE_RT   NUMBER,
    SEQ        NUMBER);

DROP SEQUENCE TTU_FCI_SEQ;
CREATE SEQUENCE TTU_FCI_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE OR REPLACE TRIGGER TRI_PROCESSING_TTU_FCI_DATA AFTER INSERT ON INTF_FCI_TTU_DATA
FOR EACH ROW
BEGIN
    IF :NEW.EQUIPTYPE = 'FCI' THEN
        INSERT INTO INTF_FCI_TTU_POOL  SELECT 'SWITCH', :NEW.TPCID||:NEW.LOOPID, :NEW.COLNAME, :NEW.CURVALUE, TTU_FCI_SEQ.NEXTVAL FROM DUAL;
    ELSE
        INSERT INTO INTF_FCI_TTU_POOL  SELECT 'LOAD', :NEW.TPCID||:NEW.LOOPID, :NEW.COLNAME, :NEW.CURVALUE, TTU_FCI_SEQ.NEXTVAL FROM DUAL;
    END IF;
END;
/



--------------------------------------------------------------------------------------------------------------------

DROP TABLE INTF_MDMS_METER_DATA;
CREATE TABLE INTF_MDMS_METER_DATA 
    ("METER_NAME" VARCHAR2(11) NOT NULL, 
     "METERUNIQUEID" VARCHAR2(10), 
     "P_KWH" VARCHAR2(6) DEFAULT 0, 
     "P_KQH_P" VARCHAR2(6) DEFAULT 0, 
     "P_KQH_M" VARCHAR2(6) DEFAULT 0, 
     "S_KWH" VARCHAR2(6) DEFAULT 0,
     "S_KQH_P" VARCHAR2(6) DEFAULT 0,
     "S_KQH_M" VARCHAR2(6) DEFAULT 0,
     "P_KW" VARCHAR2(6) DEFAULT 0, 
     "P_KQ_P" VARCHAR2(6) DEFAULT 0, 
     "P_KQ_M" VARCHAR2(6) DEFAULT 0, 
     "S_KW" VARCHAR2(6) DEFAULT 0, 
     "S_KQ_P" VARCHAR2(6) DEFAULT 0, 
     "S_KQ_M" VARCHAR2(6) DEFAULT 0, 
     "READINGTIME" DATE, 
     "RECEIVETIME" DATE);

INSERT INTO INTF_MDMS_METER_DATA (METER_NAME) SELECT METER_NAME FROM TTU_METER;
COMMIT;

CREATE INDEX INTF_MDMS_METER_DATA_IDX1 ON INTF_MDMS_METER_DATA (METER_NAME);


--#SET SERVEROUTPUT ON

CREATE OR REPLACE TRIGGER TRI_PROCESSING_METER_DATA AFTER INSERT ON INTF_MDMS_DATA
FOR EACH ROW
BEGIN
    UPDATE INTF_MDMS_METER_DATA 
        SET METERUNIQUEID  = :NEW.METERUNIQUEID,
            P_KWH          = :NEW.P_KWH,
            P_KQH_P        = :NEW.P_KQH_P,
            P_KQH_M        = :NEW.P_KQH_M,
            S_KWH          = :NEW.S_KWH,
            S_KQH_P        = :NEW.S_KQH_P,
            S_KQH_M        = :NEW.S_KQH_M,
            P_KW           = :NEW.P_KW,
            P_KQ_P         = :NEW.P_KQ_P,
            P_KQ_M         = :NEW.P_KQ_M,
            S_KW           = :NEW.S_KW,
            S_KQ_P         = :NEW.S_KQ_P,
            S_KQ_M         = :NEW.S_KQ_M,
            READINGTIME    = :NEW.READINGTIME,
            RECEIVETIME    = :NEW.RECEIVETIME
        WHERE METER_NAME   = :NEW.METER;
END;
/

CREATE OR REPLACE VIEW VIEW_METERSUM AS 
SELECT 
    T1.TTU_NAME,
    SUM(P_KWH) P_KWH, 
    SUM(P_KQH_P) P_KQH_P, 
    SUM(P_KQH_M) P_KQH_M, 
    SUM(S_KWH) S_KWH, 
    SUM(S_KQH_P) S_KQH_P, 
    SUM(S_KQH_M) S_KQH_M, 
    SUM(P_KW) P_KW, 
    SUM(P_KQ_P) P_KQ_P, 
    SUM(P_KQ_M) P_KQ_M, 
    SUM(S_KW) S_KW, 
    SUM(S_KQ_P) S_KQ_P, 
    SUM(S_KQ_M) S_KQ_M, 
    COUNT(*) METERCNT
FROM TTU_METER T1, INTF_MDMS_METER_DATA T2 WHERE T1.METER_NAME = T2.METER_NAME GROUP BY TTU_NAME;


EXIT;